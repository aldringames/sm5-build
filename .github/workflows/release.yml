name: Release

on:
  push:
    branches:
      - main
  schedule:
    - cron: "30 12 15 * *"

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Repository checkout
        uses: actions/checkout@v3
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1
        with:
          vs-prerelease: true
      - name: Install dependencies
        run: |
          iwr -useb get.scoop.sh -outfile 'install.ps1'
          .\install.ps1 -RunAsAdmin
          scoop update
          scoop install 7zip nasm
      - name: Build
        run: .\build.win.ps1
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.DATESTAMP }}
          files: SM5-Build-${{ env.DATESTAMP }}-win64.zip
  build-mac:
    runs-on: macos-latest
    steps:
      - name: Repository checkout
        uses: actions/checkout@v3
      - name: Install dependencies
        run: brew install nasm create-dmg
      - name: Build
        run: ./build.mac.sh
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.DATESTAMP }}
          files: SM5-Build-${{ env.DATESTAMP }}-mac.dmg
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64, arm64]
    steps:
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build
        run: |
          docker run -it --name sm5-build-${{ matrix.arch }} --platform=${{ matrix.arch }} ubuntu:latest /bin/bash <<EOL
          apt-get -qqy update
          apt-get -qqy install \
            ffmpeg             \
            libasound2-dev     \
            libgl-dev          \
            libglew-dev        \
            libgtk-3-dev       \
            libjack-dev        \
            libjsoncpp-dev     \
            libmad0-dev        \
            libpng-dev         \
            libpulse-dev       \
            libtomcrypt-dev    \
            libtommath-dev     \
            libudev-dev        \
            libva-dev          \
            libvorbis-dev      \
            libxinerama-dev    \
            libx11-dev         \
            libxrandr-dev      \
            libxtst-dev        \
            ninja-build
          git clone https://github.com/aldringames/sm5-build.git
          cd sm5-build
          ./build.unix.sh
          EOL
          echo "DATESTAMP=$datestamp" >> $GITHUB_ENV
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.DATESTAMP }}
          files: SM5-Build-${{ env.DATESTAMP }}-linux.tar.gz
